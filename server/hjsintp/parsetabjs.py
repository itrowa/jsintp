
# parsetabjs.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '4504CA9F901E30336F1E3CE4C64829C3'
    
_lr_action_items = {'PLUS':([3,4,6,11,14,15,17,18,36,37,38,39,43,45,47,49,50,51,52,53,54,55,56,57,58,59,60,71,73,89,92,],[-23,-25,23,-26,-28,-27,-23,23,-29,23,23,23,-24,23,23,-31,23,23,23,23,-34,23,23,-35,-33,-32,23,23,-43,-9,-30,]),'ANDAND':([3,4,6,11,14,15,17,18,36,37,38,39,43,45,47,49,50,51,52,53,54,55,56,57,58,59,60,71,73,89,92,],[-23,-25,25,-26,-28,-27,-23,25,-29,25,25,25,-24,25,25,-31,-36,-41,-39,-40,-34,-38,25,-35,-33,-32,-37,25,-43,-9,-30,]),'GE':([3,4,6,11,14,15,17,18,36,37,38,39,43,45,47,49,50,51,52,53,54,55,56,57,58,59,60,71,73,89,92,],[-23,-25,26,-26,-28,-27,-23,26,-29,26,26,26,-24,26,26,-31,26,26,-39,-40,-34,-38,26,-35,-33,-32,-37,26,-43,-9,-30,]),'LT':([3,4,6,11,14,15,17,18,36,37,38,39,43,45,47,49,50,51,52,53,54,55,56,57,58,59,60,71,73,89,92,],[-23,-25,29,-26,-28,-27,-23,29,-29,29,29,29,-24,29,29,-31,29,29,-39,-40,-34,-38,29,-35,-33,-32,-37,29,-43,-9,-30,]),'LPAREN':([0,1,3,4,7,8,9,10,11,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,80,84,86,87,89,92,93,94,],[1,1,22,-25,1,1,1,-4,-26,1,41,-28,-27,1,22,41,1,1,1,1,1,1,1,1,1,1,1,1,1,-22,1,-29,1,67,-24,1,-31,-36,-41,-39,-40,-34,-38,-42,-35,-33,-32,-37,-12,-13,-11,1,-13,-20,-19,-43,1,1,-14,-16,1,-17,-21,-13,-12,-9,-30,-18,-3,]),'VAR':([0,4,10,11,14,15,16,17,34,36,37,43,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,75,76,77,78,80,84,86,87,89,92,93,94,],[2,-25,-4,-26,-28,-27,2,-23,-22,-29,2,-24,-31,-36,-41,-39,-40,-34,-38,-42,-35,-33,-32,-37,-12,-13,-11,2,-13,-20,-19,-43,2,-14,-16,2,-17,-21,-13,-12,-9,-30,-18,-3,]),'RPAREN':([4,11,14,15,17,18,22,36,41,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,67,68,69,70,73,81,85,89,91,92,],[-25,-26,-28,-27,-23,43,-45,-29,-6,-24,73,-47,-44,-31,-36,-41,-39,-40,-34,-38,-42,-35,-33,-32,-37,-6,-8,-5,83,-43,90,-46,-9,-7,-30,]),'MINUS':([3,4,6,11,14,15,17,18,36,37,38,39,43,45,47,49,50,51,52,53,54,55,56,57,58,59,60,71,73,89,92,],[-23,-25,33,-26,-28,-27,-23,33,-29,33,33,33,-24,33,33,-31,33,33,33,33,-34,33,33,-35,-33,-32,33,33,-43,-9,-30,]),'OROR':([3,4,6,11,14,15,17,18,36,37,38,39,43,45,47,49,50,51,52,53,54,55,56,57,58,59,60,71,73,89,92,],[-23,-25,30,-26,-28,-27,-23,30,-29,30,30,30,-24,30,30,-31,-36,-41,-39,-40,-34,-38,-42,-35,-33,-32,-37,30,-43,-9,-30,]),'NUMBER':([0,1,4,7,8,9,10,11,12,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,80,84,86,87,89,92,93,94,],[4,4,-25,4,4,4,-4,-26,4,-28,-27,4,-23,4,4,4,4,4,4,4,4,4,4,4,4,4,-22,4,-29,4,-24,4,-31,-36,-41,-39,-40,-34,-38,-42,-35,-33,-32,-37,-12,-13,-11,4,-13,-20,-19,-43,4,4,-14,-16,4,-17,-21,-13,-12,-9,-30,-18,-3,]),'IDENTIFIER':([0,1,2,4,7,8,9,10,11,12,13,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,41,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,72,73,74,75,76,77,78,80,82,84,86,87,89,92,93,94,],[3,17,20,-25,17,17,17,-4,-26,17,40,-28,-27,3,-23,17,17,17,17,17,17,17,17,17,17,17,17,17,-22,17,-29,3,68,-24,17,-31,-36,-41,-39,-40,-34,-38,-42,-35,-33,-32,-37,-12,-13,-11,3,-13,-20,68,-19,-43,17,3,-14,-16,3,-17,68,-21,-13,-12,-9,-30,-18,-3,]),'GT':([3,4,6,11,14,15,17,18,36,37,38,39,43,45,47,49,50,51,52,53,54,55,56,57,58,59,60,71,73,89,92,],[-23,-25,27,-26,-28,-27,-23,27,-29,27,27,27,-24,27,27,-31,27,27,-39,-40,-34,-38,27,-35,-33,-32,-37,27,-43,-9,-30,]),'ELSE':([61,89,],[75,-9,]),'EQUALEQUAL':([3,4,6,11,14,15,17,18,36,37,38,39,43,45,47,49,50,51,52,53,54,55,56,57,58,59,60,71,73,89,92,],[-23,-25,24,-26,-28,-27,-23,24,-29,24,24,24,-24,24,24,-31,-36,24,-39,-40,-34,-38,24,-35,-33,-32,-37,24,-43,-9,-30,]),'NOT':([0,1,4,7,8,9,10,11,12,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,80,84,86,87,89,92,93,94,],[7,7,-25,7,7,7,-4,-26,7,-28,-27,7,-23,7,7,7,7,7,7,7,7,7,7,7,7,7,-22,7,-29,7,-24,7,-31,-36,-41,-39,-40,-34,-38,-42,-35,-33,-32,-37,-12,-13,-11,7,-13,-20,-19,-43,7,7,-14,-16,7,-17,-21,-13,-12,-9,-30,-18,-3,]),'WHILE':([0,4,10,11,14,15,16,17,34,36,37,43,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,75,76,77,78,80,84,86,87,89,92,93,94,],[9,-25,-4,-26,-28,-27,9,-23,-22,-29,9,-24,-31,-36,-41,-39,-40,-34,-38,-42,-35,-33,-32,-37,-12,-13,-11,9,-13,-20,-19,-43,9,-14,-16,9,-17,-21,-13,-12,-9,-30,-18,-3,]),'MOD':([3,4,6,11,14,15,17,18,36,37,38,39,43,45,47,49,50,51,52,53,54,55,56,57,58,59,60,71,73,89,92,],[-23,-25,28,-26,-28,-27,-23,28,-29,28,28,28,-24,28,28,28,28,28,28,28,-34,28,28,-35,-33,28,28,28,-43,-9,-30,]),'IF':([0,4,10,11,14,15,16,17,34,36,37,43,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,75,76,77,78,80,84,86,87,89,92,93,94,],[8,-25,-4,-26,-28,-27,8,-23,-22,-29,8,-24,-31,-36,-41,-39,-40,-34,-38,-42,-35,-33,-32,-37,-12,-13,-11,8,-13,-20,-19,-43,8,-14,-16,8,-17,-21,-13,-12,-9,-30,-18,-3,]),'DIVIDE':([3,4,6,11,14,15,17,18,36,37,38,39,43,45,47,49,50,51,52,53,54,55,56,57,58,59,60,71,73,89,92,],[-23,-25,31,-26,-28,-27,-23,31,-29,31,31,31,-24,31,31,31,31,31,31,31,-34,31,31,-35,-33,31,31,31,-43,-9,-30,]),'COMMA':([4,11,14,15,17,36,43,47,49,50,51,52,53,54,55,56,57,58,59,60,68,73,89,92,],[-25,-26,-28,-27,-23,-29,-24,74,-31,-36,-41,-39,-40,-34,-38,-42,-35,-33,-32,-37,82,-43,-9,-30,]),'STRING':([0,1,4,7,8,9,10,11,12,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,80,84,86,87,89,92,93,94,],[11,11,-25,11,11,11,-4,-26,11,-28,-27,11,-23,11,11,11,11,11,11,11,11,11,11,11,11,11,-22,11,-29,11,-24,11,-31,-36,-41,-39,-40,-34,-38,-42,-35,-33,-32,-37,-12,-13,-11,11,-13,-20,-19,-43,11,11,-14,-16,11,-17,-21,-13,-12,-9,-30,-18,-3,]),'SEMICOLON':([3,4,6,11,14,15,17,34,36,39,43,45,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,71,72,73,76,77,80,84,86,87,89,92,93,],[-23,-25,34,-26,-28,-27,-23,-22,-29,66,-24,72,-31,-36,-41,-39,-40,-34,-38,-42,-35,-33,-32,-37,-12,76,-11,76,-20,84,-19,-43,-14,-16,-17,-21,76,-12,-9,-30,-18,]),'EQUAL':([3,20,],[21,44,]),'RETURN':([0,4,10,11,14,15,16,17,34,36,37,43,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,75,76,77,78,80,84,86,87,89,92,93,94,],[12,-25,-4,-26,-28,-27,12,-23,-22,-29,12,-24,-31,-36,-41,-39,-40,-34,-38,-42,-35,-33,-32,-37,-12,-13,-11,12,-13,-20,-19,-43,12,-14,-16,12,-17,-21,-13,-12,-9,-30,-18,-3,]),'RBRACE':([34,61,62,63,64,65,66,72,76,77,78,79,80,84,86,87,88,89,93,],[-22,-12,-13,-11,-15,-13,-20,-19,-14,-16,-15,89,-17,-21,-13,-12,-10,-9,-18,]),'TIMES':([3,4,6,11,14,15,17,18,36,37,38,39,43,45,47,49,50,51,52,53,54,55,56,57,58,59,60,71,73,89,92,],[-23,-25,32,-26,-28,-27,-23,32,-29,32,32,32,-24,32,32,32,32,32,32,32,-34,32,32,-35,-33,32,32,32,-43,-9,-30,]),'LBRACE':([4,11,14,15,17,36,37,38,43,49,50,51,52,53,54,55,56,57,58,59,60,73,75,83,89,90,92,],[-25,-26,-28,-27,-23,-29,64,64,-24,-31,-36,-41,-39,-40,-34,-38,-42,-35,-33,-32,-37,-43,64,64,-9,64,-30,]),'FUNCTION':([0,1,4,7,8,9,10,11,12,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,80,84,86,87,89,92,93,94,],[13,19,-25,19,19,19,-4,-26,19,-28,-27,13,-23,19,19,19,19,19,19,19,19,19,19,19,19,19,-22,19,-29,19,-24,19,-31,-36,-41,-39,-40,-34,-38,-42,-35,-33,-32,-37,-12,-13,-11,19,-13,-20,-19,-43,19,19,-14,-16,19,-17,-21,-13,-12,-9,-30,-18,-3,]),'FALSE':([0,1,4,7,8,9,10,11,12,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,80,84,86,87,89,92,93,94,],[14,14,-25,14,14,14,-4,-26,14,-28,-27,14,-23,14,14,14,14,14,14,14,14,14,14,14,14,14,-22,14,-29,14,-24,14,-31,-36,-41,-39,-40,-34,-38,-42,-35,-33,-32,-37,-12,-13,-11,14,-13,-20,-19,-43,14,14,-14,-16,14,-17,-21,-13,-12,-9,-30,-18,-3,]),'TRUE':([0,1,4,7,8,9,10,11,12,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,80,84,86,87,89,92,93,94,],[15,15,-25,15,15,15,-4,-26,15,-28,-27,15,-23,15,15,15,15,15,15,15,15,15,15,15,15,15,-22,15,-29,15,-24,15,-31,-36,-41,-39,-40,-34,-38,-42,-35,-33,-32,-37,-12,-13,-11,15,-13,-20,-19,-43,15,15,-14,-16,15,-17,-21,-13,-12,-9,-30,-18,-3,]),'LE':([3,4,6,11,14,15,17,18,36,37,38,39,43,45,47,49,50,51,52,53,54,55,56,57,58,59,60,71,73,89,92,],[-23,-25,35,-26,-28,-27,-23,35,-29,35,35,35,-24,35,35,-31,35,35,-39,-40,-34,-38,35,-35,-33,-32,-37,35,-43,-9,-30,]),'$end':([0,5,10,16,34,42,61,62,63,65,66,72,76,77,80,84,86,87,89,93,94,],[-2,0,-4,-2,-22,-1,-12,-13,-11,-13,-20,-19,-14,-16,-17,-21,-13,-12,-9,-18,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'compoundstmt':([37,38,75,83,90,],[61,65,87,92,94,]),'stmt_or_compound':([37,75,],[62,86,]),'optargs':([22,],[46,]),'args':([22,74,],[48,85,]),'sstmt':([0,16,37,64,75,78,],[10,10,63,78,63,78,]),'params':([41,67,82,],[69,69,91,]),'optsemi':([62,65,86,],[77,80,93,]),'exp':([0,1,7,8,9,12,16,21,22,23,24,25,26,27,28,29,30,31,32,33,35,37,44,64,74,75,78,],[6,18,36,37,38,39,6,45,47,49,50,51,52,53,54,55,56,57,58,59,60,6,71,6,47,6,6,]),'stmts':([64,78,],[79,88,]),'element':([0,16,],[16,16,]),'js':([0,16,],[5,42,]),'optparams':([41,67,],[70,81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> js","S'",1,None,None,None),
  ('js -> element js','js',2,'p_js','jsgrammar.py',26),
  ('js -> <empty>','js',0,'p_js_empty','jsgrammar.py',30),
  ('element -> FUNCTION IDENTIFIER LPAREN optparams RPAREN compoundstmt','element',6,'p_element_function','jsgrammar.py',34),
  ('element -> sstmt','element',1,'p_element_stmt','jsgrammar.py',38),
  ('optparams -> params','optparams',1,'p_optparams','jsgrammar.py',42),
  ('optparams -> <empty>','optparams',0,'p_optparams_empty','jsgrammar.py',45),
  ('params -> IDENTIFIER COMMA params','params',3,'p_params','jsgrammar.py',48),
  ('params -> IDENTIFIER','params',1,'p_params_one','jsgrammar.py',51),
  ('compoundstmt -> LBRACE stmts RBRACE','compoundstmt',3,'p_compoundstmt','jsgrammar.py',54),
  ('stmts -> sstmt stmts','stmts',2,'p_stmts','jsgrammar.py',57),
  ('stmt_or_compound -> sstmt','stmt_or_compound',1,'p_stmt_or_compound','jsgrammar.py',61),
  ('stmt_or_compound -> compoundstmt','stmt_or_compound',1,'p_stmt_or_compound_c','jsgrammar.py',64),
  ('optsemi -> <empty>','optsemi',0,'p_optsemi_none','jsgrammar.py',68),
  ('optsemi -> SEMICOLON','optsemi',1,'p_optsemi_some','jsgrammar.py',72),
  ('stmts -> <empty>','stmts',0,'p_stmts_empty','jsgrammar.py',76),
  ('sstmt -> IF exp stmt_or_compound optsemi','sstmt',4,'p_sstmt_if','jsgrammar.py',82),
  ('sstmt -> WHILE exp compoundstmt optsemi','sstmt',4,'p_sstmt_while','jsgrammar.py',85),
  ('sstmt -> IF exp compoundstmt ELSE stmt_or_compound optsemi','sstmt',6,'p_sstmt_if_else','jsgrammar.py',88),
  ('sstmt -> IDENTIFIER EQUAL exp SEMICOLON','sstmt',4,'p_sstmt_assigment','jsgrammar.py',91),
  ('sstmt -> RETURN exp SEMICOLON','sstmt',3,'p_sstmt_return','jsgrammar.py',94),
  ('sstmt -> VAR IDENTIFIER EQUAL exp SEMICOLON','sstmt',5,'p_sstmt_var','jsgrammar.py',97),
  ('sstmt -> exp SEMICOLON','sstmt',2,'p_sstmt_exp','jsgrammar.py',100),
  ('exp -> IDENTIFIER','exp',1,'p_exp_identifier','jsgrammar.py',104),
  ('exp -> LPAREN exp RPAREN','exp',3,'p_exp_paren','jsgrammar.py',107),
  ('exp -> NUMBER','exp',1,'p_exp_number','jsgrammar.py',110),
  ('exp -> STRING','exp',1,'p_exp_string','jsgrammar.py',113),
  ('exp -> TRUE','exp',1,'p_exp_true','jsgrammar.py',116),
  ('exp -> FALSE','exp',1,'p_exp_false','jsgrammar.py',119),
  ('exp -> NOT exp','exp',2,'p_exp_not','jsgrammar.py',122),
  ('exp -> FUNCTION LPAREN optparams RPAREN compoundstmt','exp',5,'p_exp_lambda','jsgrammar.py',125),
  ('exp -> exp PLUS exp','exp',3,'p_exp_binop','jsgrammar.py',128),
  ('exp -> exp MINUS exp','exp',3,'p_exp_binop','jsgrammar.py',129),
  ('exp -> exp TIMES exp','exp',3,'p_exp_binop','jsgrammar.py',130),
  ('exp -> exp MOD exp','exp',3,'p_exp_binop','jsgrammar.py',131),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_binop','jsgrammar.py',132),
  ('exp -> exp EQUALEQUAL exp','exp',3,'p_exp_binop','jsgrammar.py',133),
  ('exp -> exp LE exp','exp',3,'p_exp_binop','jsgrammar.py',134),
  ('exp -> exp LT exp','exp',3,'p_exp_binop','jsgrammar.py',135),
  ('exp -> exp GE exp','exp',3,'p_exp_binop','jsgrammar.py',136),
  ('exp -> exp GT exp','exp',3,'p_exp_binop','jsgrammar.py',137),
  ('exp -> exp ANDAND exp','exp',3,'p_exp_binop','jsgrammar.py',138),
  ('exp -> exp OROR exp','exp',3,'p_exp_binop','jsgrammar.py',139),
  ('exp -> IDENTIFIER LPAREN optargs RPAREN','exp',4,'p_exp_call','jsgrammar.py',142),
  ('optargs -> args','optargs',1,'p_optargs','jsgrammar.py',146),
  ('optargs -> <empty>','optargs',0,'p_optargs_empty','jsgrammar.py',149),
  ('args -> exp COMMA args','args',3,'p_args','jsgrammar.py',152),
  ('args -> exp','args',1,'p_args_one','jsgrammar.py',155),
]
